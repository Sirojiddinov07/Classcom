# Generated by Django 5.0.6 on 2024-06-29 05:01

import core.apps.classcom.models.schedule
import datetime
import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Classes",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Classes",
                "verbose_name_plural": "Classes",
            },
        ),
        migrations.CreateModel(
            name="Download",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
            ],
            options={
                "verbose_name": "Download",
                "verbose_name_plural": "Downloads",
            },
        ),
        migrations.CreateModel(
            name="Media",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("desc", models.TextField(blank=True, null=True)),
                ("file", models.FileField(upload_to="media/")),
                (
                    "type",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "size",
                    models.BigIntegerField(blank=True, default=0, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Media",
                "verbose_name_plural": "Medias",
            },
        ),
        migrations.CreateModel(
            name="Quarter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "choices",
                    models.IntegerField(
                        choices=[
                            (1, "First Quarter"),
                            (2, "Second Quarter"),
                            (3, "Third Quarter"),
                            (4, "Fourth Quarter"),
                        ],
                        default=1,
                    ),
                ),
                (
                    "start_date",
                    models.DateField(
                        blank=True, default=datetime.datetime.today
                    ),
                ),
                (
                    "end_date",
                    models.DateField(
                        blank=True, default=datetime.datetime.today
                    ),
                ),
            ],
            options={
                "verbose_name": "Quarter",
                "verbose_name_plural": "Quarters",
            },
        ),
        migrations.CreateModel(
            name="ResourceType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="Science",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField()),
            ],
            options={
                "verbose_name": "Science",
                "verbose_name_plural": "Sciences",
            },
        ),
        migrations.CreateModel(
            name="Settings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("key", models.CharField(max_length=255, unique=True)),
                ("value", models.TextField()),
            ],
            options={
                "verbose_name": "Settings",
                "verbose_name_plural": "Settings",
            },
        ),
        migrations.CreateModel(
            name="Chat",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("massage", models.TextField()),
                ("time", models.DateTimeField(auto_now_add=True)),
                ("response", models.TextField(blank=True, null=True)),
                ("response_time", models.DateTimeField(blank=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DownloadToken",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "token",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("expires_at", models.DateTimeField()),
                (
                    "download",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="classcom.download",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Feedback",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "feedback_type",
                    models.CharField(
                        choices=[("first", "First"), ("second", "Second")],
                        max_length=10,
                    ),
                ),
                (
                    "body",
                    models.TextField(
                        validators=[
                            django.core.validators.MaxLengthValidator(1000)
                        ]
                    ),
                ),
                ("answered", models.BooleanField(default=False)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="feedbacks",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Feedback",
                "verbose_name_plural": "Feedbacks",
                "db_table": "feedback",
            },
        ),
        migrations.CreateModel(
            name="Answer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "body",
                    models.TextField(
                        validators=[
                            django.core.validators.MaxLengthValidator(1000)
                        ]
                    ),
                ),
                (
                    "feedback",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="answers",
                        to="classcom.feedback",
                    ),
                ),
            ],
            options={
                "verbose_name": "Answer",
                "verbose_name_plural": "Answers",
                "db_table": "naswer",
            },
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("message", models.TextField()),
                ("is_read", models.BooleanField(default=False)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Notification",
                "verbose_name_plural": "Notifications",
                "db_table": "notification",
            },
        ),
        migrations.CreateModel(
            name="Resource",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("banner", models.ImageField(upload_to="resource_banners/")),
                (
                    "classes",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="classcom.classes",
                    ),
                ),
                (
                    "media",
                    models.ManyToManyField(
                        blank=True,
                        related_name="resources",
                        to="classcom.media",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="classcom.resourcetype",
                    ),
                ),
            ],
            options={
                "verbose_name": "Resource",
                "verbose_name_plural": "Resources",
            },
        ),
        migrations.AddField(
            model_name="download",
            name="resource",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="classcom.resource",
            ),
        ),
        migrations.CreateModel(
            name="Schedule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "shift",
                    models.CharField(
                        choices=[
                            ("MORNING", "morning"),
                            ("EVENING", "evening"),
                        ],
                        default="MORNING",
                        max_length=255,
                    ),
                ),
                (
                    "weekday",
                    models.CharField(
                        choices=[
                            ("monday", "Monday"),
                            ("tuesday", "Tuesday"),
                            ("wednesday", "Wednesday"),
                            ("thursday", "Thursday"),
                            ("friday", "Friday"),
                            ("saturday", "Saturday"),
                        ],
                        max_length=15,
                    ),
                ),
                ("start_time", models.TimeField()),
                ("end_time", models.TimeField()),
                (
                    "lesson_time",
                    models.CharField(
                        max_length=25,
                        validators=[
                            core.apps.classcom.models.schedule.validate_lesson_time
                        ],
                    ),
                ),
                (
                    "classes",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="classcom.classes",
                    ),
                ),
                (
                    "quarter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="classcom.quarter",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="schedules",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "science",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="classcom.science",
                    ),
                ),
            ],
            options={
                "verbose_name": "Schedule",
                "verbose_name_plural": "Schedules",
            },
        ),
        migrations.CreateModel(
            name="Plan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("banner", models.ImageField(upload_to="plan/banner/")),
                (
                    "hour",
                    models.IntegerField(blank=True, default=0, null=True),
                ),
                (
                    "classes",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="classcom.classes",
                    ),
                ),
                (
                    "plan_resource",
                    models.ManyToManyField(
                        blank=True, null=True, to="classcom.media"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "quarter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="classcom.quarter",
                    ),
                ),
                (
                    "type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="classcom.resourcetype",
                    ),
                ),
                (
                    "science",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="classcom.science",
                    ),
                ),
            ],
            options={
                "verbose_name": "Plan",
                "verbose_name_plural": "Plan",
            },
        ),
        migrations.CreateModel(
            name="Moderator",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("balance", models.BigIntegerField(default=0)),
                (
                    "degree",
                    models.CharField(
                        choices=[
                            ("HIGHER", "Oliy toifa"),
                            ("EXCELLENT", "Xalq ta'limi a'lochisi"),
                            (
                                "GOOD_TEACHER",
                                "\"Eng yaxshi o'qituvchi\" konkursi g'olibi",
                            ),
                            ("AUTHOR", "Darslik muallifi"),
                        ],
                        default="AUTHOR",
                        max_length=15,
                    ),
                ),
                (
                    "docs",
                    models.FileField(
                        blank=True, null=True, upload_to="documents/"
                    ),
                ),
                ("is_contracted", models.BooleanField(default=False)),
                (
                    "classes",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="classcom.classes",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "science",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="classcom.science",
                    ),
                ),
            ],
            options={
                "verbose_name": "Moderator",
                "verbose_name_plural": "Moderators",
            },
        ),
        migrations.CreateModel(
            name="DaysOff",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("from_date", models.DateField()),
                ("to_date", models.DateField()),
                ("reason", models.CharField(max_length=255)),
                ("_class", models.ManyToManyField(to="classcom.classes")),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="days_off",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("science", models.ManyToManyField(to="classcom.science")),
            ],
            options={
                "db_table": "days_off",
            },
        ),
        migrations.CreateModel(
            name="Teacher",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("payment_status", models.BooleanField(default=False)),
                (
                    "science",
                    models.ManyToManyField(blank=True, to="classcom.science"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Teacher",
                "verbose_name_plural": "Teachers",
            },
        ),
        migrations.AddField(
            model_name="download",
            name="teacher",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="classcom.teacher",
            ),
        ),
        migrations.CreateModel(
            name="Topic",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("sequence_number", models.IntegerField(default=1)),
                (
                    "_class",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="classcom.classes",
                    ),
                ),
                (
                    "quarter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="classcom.quarter",
                    ),
                ),
                (
                    "science",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="classcom.science",
                    ),
                ),
                (
                    "thematic_plan",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="topics",
                        to="classcom.plan",
                    ),
                ),
            ],
            options={
                "verbose_name": "Topic",
                "verbose_name_plural": "Topics",
                "unique_together": {("sequence_number", "science", "_class")},
            },
        ),
        migrations.AddField(
            model_name="resource",
            name="topic",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="resources",
                to="classcom.topic",
            ),
        ),
        migrations.AddField(
            model_name="plan",
            name="topic",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="plans",
                to="classcom.topic",
            ),
        ),
    ]
